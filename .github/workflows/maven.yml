name: Running Inventory Tests

on:
  # run manually or on schedule
  schedule:
    - cron: '*/10 * * * *' # poll every 10 minutes

  workflow_dispatch:  # allow manual runs too
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  repository_dispatch:
    types: [ run-tests ]

concurrency:
  group: inventory-tests-main
  cancel-in-progress: true

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # Checkout current repo
      - uses: actions/checkout@v4

      # Check if development repo changed since last run
      - name: Check for new commits in development repo
        id: check_changes
        run: |
          echo "Checking latest commit in dev repo" 
          
          LATEST_COMMIT=$(curl -s \
            -H "Authorization: token ${{ secrets.DEV_REPO_TOKEN }}" \
            https://api.github.com/repos/vraagakrishna/automation.testing.project.development/commits/main | jq -r '.sha')
          
          echo "Latest commit SHA: $LATEST_COMMIT"
          echo "latest_commit=$LATEST_COMMIT" >> $GITHUB_OUTPUT
          
          mkdir -p .github/cache
          CACHE_FILE=".github/cache/latest_dev_repo_commit.txt"
          
          if [ -f "$CACHE_FILE" ]; then
            LAST_COMMIT=$(cat "$CACHE_FILE")
          else
            LAST_COMMIT=""
          fi
          
          echo "Last commit seem: $LAST_COMMIT"
          
          # Always run tests if this repo changed
          if [ "${{ github.event_name }}" = "push" ] || [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "Tests triggered due to current repo changed."
            echo "run_tests=true" >> $GITHUB_OUTPUT
          
          # Otherwise, check dev repo changes
          elif [ "$LATEST_COMMIT" = "$LAST_COMMIT" ]; then
            echo "No new commits in dev repo. Skipping tests."
            echo "run_tests=false" >> $GITHUB_OUTPUT
          else
            echo "New commit detected in dev repo!"
            echo "$LATEST_COMMIT" > "$CACHE_FILE"
            echo "run_tests=true" >> $GITHUB_OUTPUT
          fi

      # Save last seem commit
      - name: Commit cache update
        if: steps.check_changes.outputs.run_tests == 'true'
        run: |
          echo "Committing updated cache file..."
          mkdir -p .github/cache
          
          if [ -f ".github/cache/latest_dev_repo_commit.txt" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add .github/cache/latest_dev_repo_commit.txt || echo "Nothing to add"
            git diff --cached --quiet && echo "No changes to commit" || git commit -m "Update last seen commit from repoDev"
            git push || echo "No push permission or nothing to update"
          else
            echo "No cache file found â€” skipping commit."
          fi

      # Set up JDK
      - name: Set up JDK 11
        if: steps.check_changes.outputs.run_tests == 'true'
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      # Run Maven tests
      - name: Build with Maven
        if: steps.check_changes.outputs.run_tests == 'true'
        run: mvn clean test

      # Upload test report
      - name: Upload Test Evidence
        if: steps.check_changes.outputs.run_tests == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: test-evidence
          path: ./Reports/
